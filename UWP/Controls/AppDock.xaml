<UserControl
    x:Class="WeiPo.Controls.AppDock"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:WeiPo.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewModels="using:WeiPo.ViewModels"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:controls1="using:Microsoft.UI.Xaml.Controls"
    xmlns:common="using:WeiPo.Common"
    xmlns:models="using:WeiPo.Services.Models"
    xmlns:storage="using:Windows.Storage"
    xmlns:sys="using:System"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <RelativePanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Header.Margin" Value="16" />
                        <Setter Target="Header.CornerRadius" Value="{StaticResource CardCorner}" />
                        <Setter Target="DockShadow.Margin" Value="16" />
                        <Setter Target="DockShadowContainer.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Header.Margin" Value="16" />
                        <Setter Target="Header.CornerRadius" Value="{StaticResource CardCorner}" />
                        <Setter Target="DockShadow.Margin" Value="16" />
                        <Setter Target="DockShadowContainer.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>    
                        <Setter Target="Header.Margin" Value="0" />
                        <Setter Target="Header.CornerRadius" Value="0" />
                        <Setter Target="DockShadow.Margin" Value="0" />
                        <Setter Target="DockShadowContainer.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Border RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignBottomWithPanel="True"
                RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                Background="{ThemeResource SystemControlChromeMediumLowAcrylicElementMediumBrush}" x:Name="FullBackground" Tapped="FullBackground_Tapped" Visibility="Collapsed">
            <animations:Implicit.ShowAnimations>
                <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.3" />
            </animations:Implicit.ShowAnimations>
            <animations:Implicit.HideAnimations>
                <animations:OpacityAnimation To="0" From="1" Duration="0:0:0.2" />
            </animations:Implicit.HideAnimations>
        </Border>
        <Grid Name="DockShadowContainer" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True">
            <controls:DropShadowPanel
                x:Name="DockShadow"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                VerticalAlignment="Top"
                BlurRadius="20"
                Width="{Binding ElementName=Header, Path=(extensions:FrameworkElementExtensions.ActualWidth), Mode=OneWay}"
                Height="{Binding ElementName=Header, Path=(extensions:FrameworkElementExtensions.ActualHeight), Mode=OneWay}"
                Margin="16"
                MaxWidth="600"
                ShadowOpacity="0.6"
                Color="Black">
                <Border 
                    Width="{Binding ElementName=Header, Path=(extensions:FrameworkElementExtensions.ActualWidth), Mode=OneWay}"
                    Height="{Binding ElementName=Header, Path=(extensions:FrameworkElementExtensions.ActualHeight), Mode=OneWay}"/>
            </controls:DropShadowPanel>
        </Grid>
        <ScrollViewer Name="Header"
                      VerticalScrollBarVisibility="Auto"
                      extensions:FrameworkElementExtensions.EnableActualSizeBinding="True"
                      RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Margin="16"
                      MaxWidth="600"
                      PointerEntered="UIElement_OnPointerEntered" PointerExited="UIElement_OnPointerExited"
                      Background="{ThemeResource SystemControlAcrylicElementBrush}"
                      CornerRadius="{StaticResource CardCorner}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button HorizontalAlignment="Stretch" Margin="8,0,0,8" VerticalAlignment="Stretch" 
                        Click="NotificationClick"
                        Visibility="{x:Bind IsHeaderOpened, Mode=OneWay}" Grid.Column="0" Grid.Row="2" Style="{ThemeResource DateTimePickerFlyoutButtonStyle}">
                    <SymbolIcon Symbol="Mail" />
                </Button>
                <ContentControl Grid.Row="0" Grid.Column="1" Content="{x:Bind ViewModel.PostWeiboViewModel.StatusModel, Mode=OneWay}"
                                DataContext="{x:Bind ViewModel.PostWeiboViewModel.StatusModel, Mode=OneWay}">
                    <ContentControl.ContentTemplateSelector>
                        <common:NonNullDataTemplateSelector>
                            <common:NonNullDataTemplateSelector.DataTemplate>
                                <DataTemplate x:DataType="models:StatusModel">
                                    <local:StatusView ShowActions="False"
                                                      Status="{x:Bind Mode=OneWay}"/>
                                </DataTemplate>
                            </common:NonNullDataTemplateSelector.DataTemplate>
                        </common:NonNullDataTemplateSelector>
                    </ContentControl.ContentTemplateSelector>
                </ContentControl>
                <controls:ImageEx Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Width="{StaticResource AvatarNormalSize}"
                                  Margin="8,8,0,8"
                                  Source="{x:Bind ViewModel.MyProfile.Result.UserInfo.ProfileImageUrl, Mode=OneWay}"
                                  Tapped="{x:Bind ViewModel.ToMyProfile}"
                                  Height="{StaticResource AvatarNormalSize}" CornerRadius="999" />
                <TextBox GotFocus="UIElement_OnGotFocus" LostFocus="UIElement_OnLostFocus" Margin="8" Grid.Row="1"
                         AcceptsReturn="True" VerticalContentAlignment="Center" Grid.Column="1" TextWrapping="Wrap"                                          
                         Text="{x:Bind ViewModel.PostWeiboViewModel.Content, Mode=TwoWay}"
                         IsEnabled="{x:Bind ViewModel.PostWeiboViewModel.IsNotSending, Mode=OneWay}"
                         HorizontalAlignment="Stretch" PlaceholderText="Say sth..." />
                <Grid Visibility="{x:Bind IsHeaderOpened, Mode=OneWay}" Name="HeaderMoreContent" Grid.Row="2" Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Style>
                    </Grid.Resources>
                    <Button Margin="8,0,0,8" IsEnabled="{x:Bind ViewModel.PostWeiboViewModel.IsNotSending, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal" >
                            <SymbolIcon Symbol="Emoji"/>
                            <TextBlock Text="Emoji"/>
                        </StackPanel>
                    </Button>
                    <Button Click="{x:Bind ViewModel.PostWeiboViewModel.PickImages}"
                            Grid.Column="1" Margin="8,0,0,8" Name="PickImageButton" 
                            IsEnabled="{x:Bind ViewModel.PostWeiboViewModel.IsNotSending, Mode=OneWay}">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Pictures"/>
                            <TextBlock Text="Image"/>
                        </StackPanel>
                    </Button>
                    <Button Click="{x:Bind ViewModel.PostWeiboViewModel.Commit}" 
                            IsEnabled="{x:Bind ViewModel.PostWeiboViewModel.IsNotSending, Mode=OneWay}" 
                            Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,0,8,8">
                        <StackPanel Orientation="Horizontal">
                            <SymbolIcon Symbol="Send"/>
                            <TextBlock Text="Send"/>
                        </StackPanel>
                    </Button>
                    <controls1:TeachingTip Grid.ColumnSpan="3"
                                           Target="{x:Bind PickImageButton}"
                                           x:Name="ImageTeachTip"
                                           PreferredPlacement="Bottom">
                        <controls1:TeachingTip.ActionButtonContent>
                            <Grid Loaded="TeachGridLoaded"></Grid>
                        </controls1:TeachingTip.ActionButtonContent>
                        <controls1:TeachingTip.CloseButtonContent>
                            <Grid Loaded="TeachGridLoaded"></Grid>
                        </controls1:TeachingTip.CloseButtonContent>
                        <controls1:TeachingTip.Content>
                            <GridView SelectionMode="None" AllowDrop="True" HorizontalAlignment="Center" HorizontalContentAlignment="Center" Width="240" ReorderMode="Enabled" CanReorderItems="True" ItemsSource="{x:Bind ViewModel.PostWeiboViewModel.Files, Mode=OneWay}">
                                <GridView.ItemTemplate>
                                    <DataTemplate x:DataType="storage:StorageFile">
                                        <Grid DataContext="{x:Bind}">
                                            <local:StorageItemImage Width="75" Height="75" ThumbnailMode="DocumentsView" HorizontalAlignment="Center" VerticalAlignment="Center" StorageItem="{x:Bind}"/>
                                            <Button HorizontalAlignment="Right" VerticalAlignment="Top" Style="{ThemeResource DateTimePickerFlyoutButtonStyle}" Click="RemoveImageClicked">
                                                <SymbolIcon Symbol="Cancel"/>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                        </controls1:TeachingTip.Content>
                    </controls1:TeachingTip>
                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.3" />
                        <animations:TranslationAnimation From="0, 20, 0" To="0" Duration="0:0:0.3" />
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:OpacityAnimation To="0" From="1" Duration="0:0:0.2" />
                        <animations:TranslationAnimation To="0, 20, 0" From="0" Duration="0:0:0.2" />
                    </animations:Implicit.HideAnimations>
                </Grid>
            </Grid>
        </ScrollViewer>
    </RelativePanel>
    <animations:Implicit.ShowAnimations>
        <animations:OpacityAnimation From="0" To="1" Duration="0:0:0.3" />
        <animations:TranslationAnimation From="0, -40, 0" To="0" Duration="0:0:0.3" />
    </animations:Implicit.ShowAnimations>
    <animations:Implicit.HideAnimations>
        <animations:OpacityAnimation To="0" From="1" Duration="0:0:0.2" />
        <animations:TranslationAnimation To="0, -40, 0" From="0" Duration="0:0:0.2" />
    </animations:Implicit.HideAnimations>
</UserControl>
